---
# deploy go
- template:
    src: profile.j2
    dest: /root/.profile
    mode: 0744
- file:
    path: /root/code
    state: directory

- name: get the go code
  shell: 'wget https://dl.google.com/go/go1.10.3.linux-amd64.tar.gz'
  args:
    chdir: /root
- name: unpack the go code
  shell: 'tar -C /root -xzf go1.10.3.linux-amd64.tar.gz'
  args:
    chdir: /root

- name: Install jsonnet and jsonnet-bundler
  shell: '. /root/.profile;go get {{ item.source }} && go install {{ item.source }}'
  args:
    chdir: /root/code
    creates: '/root/code/bin/{{ item.binary }}'
  with_items:
    - { source: 'github.com/google/go-jsonnet/jsonnet', binary: 'jsonnet' }
    - { source: 'github.com/jsonnet-bundler/jsonnet-bundler/cmd/jb', binary: 'jb' }

- name: Create directory for the jsonnet templates
  file:
    path: /root/prometheus
    state: directory

- name: Get the jsonnet templates
  shell: '/root/code/bin/jb init && /root/code/bin/jb install github.com/coreos/prometheus-operator/contrib/kube-prometheus/jsonnet/kube-prometheus'
  args:
    chdir: /root/prometheus
    creates: /root/prometheus/jsonnetfile.json

- template:
    src: prometheus.jsonnet.j2
    dest: /root/prometheus/prometheus.jsonnet

- template:
    src: alertmanager-config.yml.j2
    dest: /root/prometheus/alertmanager-config.yml

- template:
    src: sc-pro1.yaml.j2
    dest: /root/prometheus/sc-pro1.yaml

- name: Create output directory for the manifests
  file:
    path: /root/prometheus/manifests
    state: directory

- name: remove the old jsonnet file
  file:
    path: /root/prometheus/jsonnetfile.json
    state: absent

- name: Generate the manifests
  shell: '/root/code/bin/jsonnet -J vendor -m manifests prometheus.jsonnet'
  args:
    chdir: /root/prometheus
    creates: /root/prometheus/jsonnetfile.json
  register: generate_manifests

- debug:
    var=generate_manifests
