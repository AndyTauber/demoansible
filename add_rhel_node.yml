---
#
#Script to prepare one RHEL node for addition to existing k8 cluster
#Server name of VMs to deploy is variable input
#
#Hints
#ansible-vault encrypt group_vars/k8_secrets.yml --vault-password-file ../vault_pass.txt
#ansible-playbook add_rhel_node.yml --extra-vars server_name=<servername> --vault-password-file ../vault_pass.txt
#
#once the nodes are deployed, use kubespray to create k8 cluster
#add new servername and IP to the inventory file in correct locations, then
#ansible-playbook -i inventory/rhel/<prefix>.ini cluster.yml -b -v --extra-vars "@inventory/rhel/group_vars/k8_secrets.yml" --vault-password-file ../vault_pass.txt
#
- hosts: localhost
  vars_files:
    - group_vars/k8_secrets.yml
    - group_vars/k8_variables.yml
  connection: local
  vars:
    nios_provider:
      host: "{{ nios_host }}"
      username: "{{ svc_k8s_username }}"
      password: "{{ svc_k8s_password }}"
  tasks:
  - name: check if last host already exits and fail if so
    command: ping -c1 "{{ server_name }}.{{ domain }}"
    delegate_to: localhost
    register: ping_result
    failed_when: ping_result.rc == 0

  - name: create an infoblox record for the server
    nios_host_record:
      name: "{{ server_name }}.{{ domain }}"
      view: "{{ k8_view }}"
      ipv4:
        - address: "{{ lookup('nios_next_ip', '172.24.67.0/24', provider=nios_provider)[0] }}"
      comment: ATD K8 Cluster server A record
      state: present
      provider: "{{ nios_provider }}"
    with_sequence: start=1 end=1
    register: ip_create

  - name: debug specific variable
    debug:
      var: ip_create

  # deploy the vCenter VM
  - name: Create rhel VM from a template
    vmware_guest:
      hostname: "{{ vCenter_server }}"
      username: "{{ svc_k8s_username }}"
      password: "{{ svc_k8s_password }}"
      validate_certs: no
      datacenter: WinstonSalem
      cluster: WIN_K8S
      folder: /WinstonSalem/vm/K8S
      guest_id: rhel7_64Guest
      name: "{{ server_name }}"
      state: poweredon
      template: k8template_rhel
      networks:
      - name: "{{ vm_portgroup }}"
        type: static
        ip: "{{ip_create.results[0].invocation.module_args.ipv4[0].ipv4addr}}"
        netmask: "{{ vm_netmask }}"
        gateway: "{{ vm_gateway }}"
        start_connected: yes
      customization:
        domain: "{{ domain }}"
        hostname: "{{ server_name }}"
        dns_servers:
        - 172.23.20.70
#      disk:
#      - size_gb: 40
#        type: thin
#        datastore: "{{ vm_datastore }}"
      hardware:
        memory_mb: "{{ vm_mb }}"
        num_cpus: "{{ vm_cpu }}"
      wait_for_ip_address: yes
    delegate_to: localhost
    register: vm_info

  - name: add hosts to group
    add_host:
      name: "{{ip_create.results[0].invocation.module_args.ipv4[0].ipv4addr}}"
      groups: just_created
      hname: "{{ server_name }}"
    register: dyn_group

  - name: check the vm record return variable
    debug:
      var: dyn_group

##########################
# prep the new rhel node
##########################
- name: Configure rhel nodes
  hosts: just_created
  become: yes
  become_user: root
  roles:
    - rhel-satreg
    - k8-prep
